# the name of the target operating system
set(CMAKE_SYSTEM_NAME Linux)
set(CMAKE_SYSTEM_PROCESSOR aarch64)
set(CMAKE_HOST_SYSTEM_NAME Linux)
set(CMAKE_HOST_SYSTEM_PROCESSOR x86_64)
set(CMAKE_C_COMPILER_WORKS 1)
set(CMAKE_CXX_COMPILER_WORKS 1)

# where is the target environment located
set(CMAKE_SYSROOT "")
set(SYSROOT_USR_INCLUDE_DIRS "${CMAKE_SYSROOT}/usr/include")

# which compilers to use for C and C++
set(CMAKE_C_COMPILER   aarch64-linux-gnu-gcc)
set(CMAKE_CXX_COMPILER aarch64-linux-gnu-g++)

set(CMAKE_C_FLAGS "-I${SYSROOT_USR_INCLUDE_DIRS}" CACHE STRING "CFLAGS")
set(CMAKE_CXX_FLAGS "-I${SYSROOT_USR_INCLUDE_DIRS}" CACHE STRING "CXXFLAGS")
set(CMAKE_EXE_LINKER_FLAGS "-L${CMAKE_SYSROOT}/usr/lib")
set(CMAKE_EXE_LINKER_FLAGS "-L${CMAKE_SYSROOT}/lib")

# adjust the default behavior of the FIND_XXX() commands:
# search programs in the host environment
set(CMAKE_FIND_ROOT_PATH_MODE_PROGRAM NEVER)
# search headers and libraries in the target environment
set(CMAKE_FIND_ROOT_PATH_MODE_PACKAGE ONLY)
set(CMAKE_FIND_ROOT_PATH_MODE_LIBRARY ONLY)
set(CMAKE_FIND_ROOT_PATH_MODE_INCLUDE ONLY)

if (DEFINED ENV{PKG_CONFIG_SYSROOT_DIR})
if (NOT "$ENV{PKG_CONFIG_SYSROOT_DIR}" MATCHES "${CMAKE_SYSROOT}")
message(WARNING "PKG_CONFIG_SYSROOT_DIR is setting to $ENV{PKG_CONFIG_SYSROOT_DIR}")
endif()
else()
set(ENV{PKG_CONFIG_LIBDIR} "${CMAKE_SYSROOT}/usr/lib/pkgconfig:${CMAKE_SYSROOT}/usr/share/pkgconfig")
set(ENV{PKG_CONFIG_SYSROOT_DIR} ${CMAKE_SYSROOT})
endif()

list(APPEND CMAKE_C_IMPLICIT_INCLUDE_DIRECTORIES ${SYSROOT_USR_INCLUDE_DIRS}) # set c include dir for sysroot
list(APPEND CMAKE_CXX_IMPLICIT_INCLUDE_DIRECTORIES ${SYSROOT_USR_INCLUDE_DIRS}) # set c include dir for sysroot
